# pyproject.toml — template for a uv‑managed project

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

# ---------------------------------------------------------------------------
# Project metadata (PEP 621).
# Fill in name, version, description, authors, etc. as appropriate.
# ---------------------------------------------------------------------------
[project]
name = "python-programming-interviews"
version = "0.0.1"
description = "Elements of Programming Interview in python repository"
authors = [
  { name = "calvin", email = "clee421@gmail.com" },
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.12"

# Runtime dependencies
dependencies = [
  "click>=8.1",
  "rich>=14.0.0",
  "rich-click>=1.8.9",
]

[dependency-groups]
dev  = [
  "ruff>=0.4",
  "black>=24.4",
  "mypy>=1.10",
  "pre-commit>=3.7",
]

test = [
  "pytest>=8.1",
  "pytest-cov>=5.1",
]

# ---- entry points (optional) ----
# [project.scripts]
# your-cli = "your_package.cli:main"

# ---------------------------------------------------------------------------
# uv‑specific overrides. Setting package = true forces uv to build & install
# the project into the virtual‑env even if it’s not being published yet.
# ---------------------------------------------------------------------------
[tool.uv]
package = true

# ---------------------------------------------------------------------------
# Example lint / format / type‑check configs (uncomment to use)
# ---------------------------------------------------------------------------
# [tool.ruff]
# line-length = 120
#
# [tool.black]
# line-length = 120
#
# [tool.mypy]
# python_version = "3.12"
